package com.jingxin.hibernate.model;

// Generated 2015-12-30 11:13:07 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Record generated by hbm2java
 */
@Entity
@Table(name = "record", catalog = "jingxin")
public class Record implements java.io.Serializable {

	private Integer id;
	private User user;
	private Field field;
	private Date recordDate;
	private String note;
	private Set<User> users = new HashSet<User>(0);

	public Record() {
	}

	public Record(User user, Field field, Date recordDate, String note,
			Set<User> users) {
		this.user = user;
		this.field = field;
		this.recordDate = recordDate;
		this.note = note;
		this.users = users;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RecordManager")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Field")
	public Field getField() {
		return this.field;
	}

	public void setField(Field field) {
		this.field = field;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "RecordDate", length = 19)
	public Date getRecordDate() {
		return this.recordDate;
	}

	public void setRecordDate(Date recordDate) {
		this.recordDate = recordDate;
	}

	@Column(name = "Note", length = 65535)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "recordUser", catalog = "jingxin", joinColumns = { @JoinColumn(name = "RecordId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "UserId", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
