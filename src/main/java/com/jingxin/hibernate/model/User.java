package com.jingxin.hibernate.model;

// Generated 2015-12-30 11:13:07 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "jingxin", uniqueConstraints = @UniqueConstraint(columnNames = "Username"))
public class User implements java.io.Serializable {

	private Integer id;
	private Field field;
	private String username;
	private String password;
	private String sid;
	private Integer type;
	private String name;
	private String sex;
	private String number;
	private String mail;
	private Boolean isBlack;
	private String userImage;
	private Integer absentNum;
	private Integer participateNum;
	private Date registerDate;
	private Date lastLoginDate;
	private String note;
	private Date contractDate;
	private Set<Record> records = new HashSet<Record>(0);
	private Set<Article> articles = new HashSet<Article>(0);
	private Set<Record> records_1 = new HashSet<Record>(0);
	private Set<Apply> applies = new HashSet<Apply>(0);

	public User() {
	}

	public User(Field field, String username, String password, String sid,
			Integer type, String name, String sex, String number, String mail,
			Boolean isBlack, String userImage, Integer absentNum,
			Integer participateNum, Date registerDate, Date lastLoginDate,
			String note, Date contractDate, Set<Record> records,
			Set<Article> articles, Set<Record> records_1, Set<Apply> applies) {
		this.field = field;
		this.username = username;
		this.password = password;
		this.sid = sid;
		this.type = type;
		this.name = name;
		this.sex = sex;
		this.number = number;
		this.mail = mail;
		this.isBlack = isBlack;
		this.userImage = userImage;
		this.absentNum = absentNum;
		this.participateNum = participateNum;
		this.registerDate = registerDate;
		this.lastLoginDate = lastLoginDate;
		this.note = note;
		this.contractDate = contractDate;
		this.records = records;
		this.articles = articles;
		this.records_1 = records_1;
		this.applies = applies;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Field")
	public Field getField() {
		return this.field;
	}

	public void setField(Field field) {
		this.field = field;
	}

	@Column(name = "Username", unique = true, length = 20)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "Password", length = 32)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "Sid", length = 32)
	public String getSid() {
		return this.sid;
	}

	public void setSid(String sid) {
		this.sid = sid;
	}

	@Column(name = "Type")
	public Integer getType() {
		return this.type;
	}

	public void setType(Integer type) {
		this.type = type;
	}

	@Column(name = "Name", length = 10)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Sex", length = 2)
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@Column(name = "Number", length = 11)
	public String getNumber() {
		return this.number;
	}

	public void setNumber(String number) {
		this.number = number;
	}

	@Column(name = "Mail", length = 50)
	public String getMail() {
		return this.mail;
	}

	public void setMail(String mail) {
		this.mail = mail;
	}

	@Column(name = "IsBlack")
	public Boolean getIsBlack() {
		return this.isBlack;
	}

	public void setIsBlack(Boolean isBlack) {
		this.isBlack = isBlack;
	}

	@Column(name = "UserImage")
	public String getUserImage() {
		return this.userImage;
	}

	public void setUserImage(String userImage) {
		this.userImage = userImage;
	}

	@Column(name = "AbsentNum")
	public Integer getAbsentNum() {
		return this.absentNum;
	}

	public void setAbsentNum(Integer absentNum) {
		this.absentNum = absentNum;
	}

	@Column(name = "ParticipateNum")
	public Integer getParticipateNum() {
		return this.participateNum;
	}

	public void setParticipateNum(Integer participateNum) {
		this.participateNum = participateNum;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "RegisterDate", length = 19)
	public Date getRegisterDate() {
		return this.registerDate;
	}

	public void setRegisterDate(Date registerDate) {
		this.registerDate = registerDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LastLoginDate", length = 19)
	public Date getLastLoginDate() {
		return this.lastLoginDate;
	}

	public void setLastLoginDate(Date lastLoginDate) {
		this.lastLoginDate = lastLoginDate;
	}

	@Column(name = "Note", length = 65535)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ContractDate", length = 10)
	public Date getContractDate() {
		return this.contractDate;
	}

	public void setContractDate(Date contractDate) {
		this.contractDate = contractDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Record> getRecords() {
		return this.records;
	}

	public void setRecords(Set<Record> records) {
		this.records = records;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Article> getArticles() {
		return this.articles;
	}

	public void setArticles(Set<Article> articles) {
		this.articles = articles;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "recordUser", catalog = "jingxin", joinColumns = { @JoinColumn(name = "UserId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "RecordId", nullable = false, updatable = false) })
	public Set<Record> getRecords_1() {
		return this.records_1;
	}

	public void setRecords_1(Set<Record> records_1) {
		this.records_1 = records_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Apply> getApplies() {
		return this.applies;
	}

	public void setApplies(Set<Apply> applies) {
		this.applies = applies;
	}

}
